/* tslint:disable */
/* eslint-disable */
/**
 * Music Lab
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnprocessableEntity
 */
export interface UnprocessableEntity {
    /**
     * an optional object which contains values required to render the error message.
     * @type {object}
     * @memberof UnprocessableEntity
     */
    ctx?: object;
    /**
     * the error's location as a list. 
     * @type {Array<string>}
     * @memberof UnprocessableEntity
     */
    loc?: Array<string>;
    /**
     * a computer-readable identifier of the error type.
     * @type {string}
     * @memberof UnprocessableEntity
     */
    msg?: string;
    /**
     * a human readable explanation of the error.
     * @type {string}
     * @memberof UnprocessableEntity
     */
    type?: string;
}

/**
 * Check if a given object implements the UnprocessableEntity interface.
 */
export function instanceOfUnprocessableEntity(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UnprocessableEntityFromJSON(json: any): UnprocessableEntity {
    return UnprocessableEntityFromJSONTyped(json, false);
}

export function UnprocessableEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnprocessableEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ctx': !exists(json, 'ctx') ? undefined : json['ctx'],
        'loc': !exists(json, 'loc') ? undefined : json['loc'],
        'msg': !exists(json, 'msg') ? undefined : json['msg'],
        'type': !exists(json, 'type_') ? undefined : json['type_'],
    };
}

export function UnprocessableEntityToJSON(value?: UnprocessableEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ctx': value.ctx,
        'loc': value.loc,
        'msg': value.msg,
        'type_': value.type,
    };
}

